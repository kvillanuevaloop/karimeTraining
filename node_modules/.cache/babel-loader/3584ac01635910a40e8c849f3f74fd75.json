{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n\nfunction indexBoard(state) {\n  return state.list.map(element => element.id).indexOf(state.currentBoardId);\n}\n\n;\nexport const boardSlice = createSlice({\n  name: \"boards\",\n  initialState: {\n    list: [],\n    currentBoardId: 0\n  },\n  reducers: {\n    addBoard: (state, action) => {\n      state.list.push({\n        id: action.payload.id,\n        title: action.payload.title,\n        columns: []\n      });\n    },\n    addInitialBoards: (state, action) => {\n      action.payload.forEach(element => {\n        state.list.push({\n          id: element.id,\n          title: element.title,\n          columns: element.columns\n        });\n      });\n      state.currentBoardId = state.list[0].id;\n    },\n    addColumn: (state, action) => {\n      state.list[indexBoard(state)].columns.push({\n        id: action.payload.id,\n        title: action.payload.title,\n        cards: []\n      });\n    },\n    addInitialColumns: (state, action) => {\n      state.list[indexBoard(state)].columns = [];\n      action.payload.forEach(element => {\n        state.list[indexBoard(state)].columns.push({\n          id: element.id,\n          title: element.title,\n          cards: element.cards\n        });\n      });\n    },\n    changeBoard: (state, action) => {\n      state.currentBoardId = action.payload;\n    },\n    deleteBoard: (state, action) => {\n      state.list = state.list.filter(item => item.id !== action.payload);\n\n      if (state.list[0]) {\n        state.currentBoardId = state.list[0].id;\n      } else state.currentBoardId = -1;\n    },\n    deleteColumn: (state, action) => {\n      state.list[indexBoard(state)].columns = state.list[indexBoard(state)].columns.filter(item => item.id !== action.payload);\n    },\n    addCard: (state, action) => {\n      const index = state.list[indexBoard(state)].columns.map(element => element.id).indexOf(action.payload.columnId);\n      state.list[indexBoard(state)].columns[index].cards.push(action.payload);\n    },\n    changeCardTitle: (state, action) => {\n      const columnIndex = state.list[indexBoard(state)].columns.map(element => element.id).indexOf(action.payload.columnId);\n      const cardIndex = state.list[indexBoard(state)].columns[columnIndex].cards.map(element => element.id).indexOf(action.payload.cardId);\n      state.list[indexBoard(state)].columns[columnIndex].cards[cardIndex].title = action.payload.newTitle;\n    },\n    deleteCard: (state, action) => {\n      state.list[indexBoard(state)].columns.find(element => element.id === action.payload.idColumn).cards = state.list[indexBoard(state)].columns.find(element => element.id === action.payload.idColumn).cards.filter(item => item.id !== action.payload.idCard);\n    },\n    changeColumnTitle: (state, action) => {\n      const columns = state.list[indexBoard(state)].columns;\n      const columnIndex = columns.map(element => element.id).indexOf(action.payload.id);\n      columns[columnIndex].title = action.payload.newTitle;\n    },\n    moveCard: (state, action) => {\n      const columns = state.list[indexBoard(state)].columns;\n      const cardToMove = columns.find(element => element.id === action.payload.idColumn).cards.find(element => element.id === action.payload.idCard);\n      state.list[indexBoard(state)].columns.find(element => element.id === action.payload.idColumn).cards = columns.find(element => element.id === action.payload.idColumn).cards.filter(element => element.id !== cardToMove.id);\n      const arrayPosition = Math.floor((action.payload.y - 170) / 80) + 1;\n      const index = action.payload.y < 150 ? 0 : arrayPosition < columns.find(element => element.id === action.payload.newIdColumn).cards.length ? arrayPosition : columns.find(element => element.id === action.payload.newIdColumn).cards.length;\n      columns.find(element => element.id === action.payload.newIdColumn).cards.splice(index, 0, cardToMove);\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  addBoard,\n  addColumn,\n  changeBoard,\n  deleteBoard,\n  deleteColumn,\n  addCard,\n  changeCardTitle,\n  deleteCard,\n  changeColumnTitle,\n  moveCard,\n  addInitialBoards,\n  addInitialColumns\n} = boardSlice.actions;\nexport default boardSlice.reducer;","map":{"version":3,"names":["createSlice","indexBoard","state","list","map","element","id","indexOf","currentBoardId","boardSlice","name","initialState","reducers","addBoard","action","push","payload","title","columns","addInitialBoards","forEach","addColumn","cards","addInitialColumns","changeBoard","deleteBoard","filter","item","deleteColumn","addCard","index","columnId","changeCardTitle","columnIndex","cardIndex","cardId","newTitle","deleteCard","find","idColumn","idCard","changeColumnTitle","moveCard","cardToMove","arrayPosition","Math","floor","y","newIdColumn","length","splice","actions","reducer"],"sources":["/Users/karimevillanueva/Desktop/Practico/karimeTraining/src/reducers/boardSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nfunction indexBoard (state) { return state.list.map((element) => element.id).indexOf(state.currentBoardId)};\n\nexport const boardSlice = createSlice({\n  name: \"boards\",\n  initialState: {\n    list: [],\n    currentBoardId: 0,\n  },\n  reducers: {\n    addBoard: (state, action) => {\n      state.list.push({\n        id: action.payload.id,\n        title: action.payload.title,\n        columns: [],\n      });\n    },\n    addInitialBoards: (state, action) => {\n      action.payload.forEach(element => {\n        state.list.push({\n          id: element.id,\n          title: element.title,\n          columns: element.columns,\n        });\n      });\n      state.currentBoardId = state.list[0].id;\n    },\n    addColumn: (state, action) => {\n      state.list[indexBoard(state)].columns.push({\n        id: action.payload.id,\n        title: action.payload.title,\n        cards: [],\n      });\n    },\n    addInitialColumns: (state, action) => {\n      state.list[indexBoard(state)].columns = [];\n      action.payload.forEach(element => {\n        state.list[indexBoard(state)].columns.push({\n          id: element.id,\n          title: element.title,\n          cards: element.cards,\n        });\n      });\n    },\n    changeBoard: (state, action) => {\n      state.currentBoardId = action.payload;\n    },\n    deleteBoard: (state, action) => {\n      state.list = state.list.filter((item) => item.id !== action.payload);\n      if (state.list[0]) {\n        state.currentBoardId = state.list[0].id;\n      } else state.currentBoardId = -1;\n    },\n    deleteColumn: (state, action) => {\n      state.list[indexBoard(state)].columns = state.list[\n        indexBoard(state)\n      ].columns.filter((item) => item.id !== action.payload);\n    },\n    addCard: (state, action) => {\n      const index = state.list[indexBoard(state)].columns\n        .map((element) => element.id)\n        .indexOf(action.payload.columnId);\n        state.list[indexBoard(state)].columns[index].cards.push(action.payload);\n    },\n    changeCardTitle: (state, action) => {\n      const columnIndex = state.list[indexBoard(state)].columns.map((element) => element.id)\n      .indexOf(action.payload.columnId);\n      const cardIndex = state.list[indexBoard(state)].columns[columnIndex].cards\n        .map((element) => element.id)\n        .indexOf(action.payload.cardId);\n        state.list[indexBoard(state)].columns[columnIndex].cards[cardIndex].title = action.payload.newTitle;\n    },\n    deleteCard: (state, action) => {\n      state.list[indexBoard(state)].columns.find((element) => element.id === action.payload.idColumn).cards =\n        state.list[indexBoard(state)].columns.find((element) => element.id === action.payload.idColumn).cards.filter((item) => item.id !== action.payload.idCard);\n    },\n    changeColumnTitle: (state, action) => {\n      const columns = state.list[indexBoard(state)].columns;\n      const columnIndex = columns\n        .map((element) => element.id)\n        .indexOf(action.payload.id);\n      columns[columnIndex].title = action.payload.newTitle;\n    },\n    moveCard: (state, action) => {\n      const columns = state.list[indexBoard(state)].columns;\n      const cardToMove = columns.find((element) => element.id === action.payload.idColumn).cards.find((element) => element.id === action.payload.idCard);\n      state.list[indexBoard(state)].columns.find((element) => element.id === action.payload.idColumn).cards = columns.find((element) => element.id === action.payload.idColumn).cards.filter((element) => element.id !== cardToMove.id);\n      const arrayPosition = Math.floor((action.payload.y - 170) / (80)) + 1;\n      const index =\n        action.payload.y < 150\n          ? 0\n          : arrayPosition < columns.find((element) => element.id === action.payload.newIdColumn).cards.length\n          ? arrayPosition\n          : columns.find((element) => element.id === action.payload.newIdColumn).cards.length;\n      columns.find((element) => element.id === action.payload.newIdColumn).cards.splice(index,0,cardToMove);\n    }\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  addBoard,\n  addColumn,\n  changeBoard,\n  deleteBoard,\n  deleteColumn,\n  addCard,\n  changeCardTitle,\n  deleteCard,\n  changeColumnTitle,\n  moveCard,\n  addInitialBoards,\n  addInitialColumns,\n} = boardSlice.actions;\n\nexport default boardSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}