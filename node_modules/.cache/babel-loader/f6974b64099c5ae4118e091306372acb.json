{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const boardSlice = createSlice({\n  name: \"boards\",\n  initialState: {\n    list: [],\n    currentBoardId: 0,\n    idBoard: -1,\n    idColumn: -1,\n    idCard: -1\n  },\n  reducers: {\n    addBoard: (state, action) => {\n      state.idBoard += 1;\n      state.list.push({\n        id: state.idBoard,\n        title: action.payload,\n        columns: []\n      });\n    },\n    addColumn: (state, action) => {\n      state.idColumn += 1;\n      state.list[state.currentBoardId].columns.push({\n        id: state.idColumn,\n        title: action.payload,\n        cards: []\n      });\n    },\n    changeBoard: (state, action) => {\n      state.currentBoardId = action.payload;\n    },\n    deleteBoard: (state, action) => {\n      const element = state.list.find(element => element.id === action.payload);\n      state.list = state.list.filter(item => item !== element);\n      state.currentBoardId = 0;\n    },\n    deleteColumn: (state, action) => {\n      const indexBoard = state.list.map(element => element.currentBoardId).indexOf(state.currentBoardId);\n      const element = state.list[indexBoard].columns.find(element => element.id === action.payload);\n      state.list[indexBoard].columns = state.list[state.currentBoardId].columns.filter(item => item !== element);\n    },\n    addCard: (state, action) => {\n      state.idCard += 1;\n      const indexBoard = state.list.map(element => element.currentBoardId).indexOf(state.currentBoardId);\n      const columns = state.list[indexBoard].columns;\n      const index = columns.map(element => element.id).indexOf(action.payload);\n      columns[index].cards.push({\n        id: state.idCard,\n        title: \"Nueva card\"\n      });\n    },\n    changeCardTitle: (state, action) => {\n      const indexBoard = state.list.map(element => element.currentBoardId).indexOf(state.currentBoardId);\n      const column = state.list[indexBoard].columns[action.payload.columnId];\n      const cardIndex = column.cards.map(element => element.id).indexOf(action.payload.cardId);\n      column.cards[cardIndex].title = action.payload.newTitle;\n    },\n    deleteCard: (state, action) => {\n      const indexBoard = state.list.map(element => element.currentBoardId).indexOf(state.currentBoardId);\n      const element = state.list[indexBoard].columns.find(element => element.id === action.payload.idColumn).cards.find(element => element.id === action.payload.idCard);\n      state.list[indexBoard].columns.find(element => element.id === action.payload.idColumn).cards = state.list[indexBoard].columns.find(element => element.id === action.payload.idColumn).cards.filter(item => item !== element);\n    },\n    changeColumnTitle: (state, action) => {\n      const indexBoard = state.list.map(element => element.currentBoardId).indexOf(state.currentBoardId);\n      const columns = state.list[indexBoard].columns;\n      const cardIndex = columns.map(element => element.id).indexOf(action.payload.id);\n      columns[cardIndex].title = action.payload.newTitle;\n    },\n    moveCard: (state, action) => {\n      const indexBoard = state.list.map(element => element.currentBoardId).indexOf(state.currentBoardId);\n      const columns = state.list[indexBoard].columns;\n      const cardToMove = columns.find(element => element.id === action.payload.idColumn).cards.find(element => element.id === action.payload.idCard);\n      state.list[indexBoard].columns.find(element => element.id === action.payload.idColumn).cards = columns.find(element => element.id === action.payload.idColumn).cards.filter(element => element.id !== cardToMove.id);\n      const arrayPosition = Math.floor((action.payload.y - 150) / 75) + 1;\n      const index = action.payload.y < 150 ? 0 : arrayPosition < columns.find(element => element.id === action.payload.newIdColumn).cards.length ? arrayPosition : columns[action.payload.newIdColumn].cards.length;\n      columns[action.payload.newIdColumn].cards.splice(index, 0, cardToMove);\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  addBoard,\n  addColumn,\n  changeBoard,\n  deleteBoard,\n  deleteColumn,\n  addCard,\n  changeCardTitle,\n  deleteCard,\n  changeColumnTitle,\n  moveCard\n} = boardSlice.actions;\nexport default boardSlice.reducer;","map":{"version":3,"names":["createSlice","boardSlice","name","initialState","list","currentBoardId","idBoard","idColumn","idCard","reducers","addBoard","state","action","push","id","title","payload","columns","addColumn","cards","changeBoard","deleteBoard","element","find","filter","item","deleteColumn","indexBoard","map","indexOf","addCard","index","changeCardTitle","column","columnId","cardIndex","cardId","newTitle","deleteCard","changeColumnTitle","moveCard","cardToMove","arrayPosition","Math","floor","y","newIdColumn","length","splice","actions","reducer"],"sources":["/Users/karimevillanueva/Desktop/Practico/karimeTraining/src/reducers/boardSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const boardSlice = createSlice({\n  name: \"boards\",\n  initialState: {\n    list: [],\n    currentBoardId: 0,\n    idBoard: -1,\n    idColumn: -1,\n    idCard: -1,\n  },\n  reducers: {\n    addBoard: (state, action) => {\n      state.idBoard += 1;\n      state.list.push({\n        id: state.idBoard,\n        title: action.payload,\n        columns: [],\n      });\n    },\n    addColumn: (state, action) => {\n      state.idColumn += 1;\n      state.list[state.currentBoardId].columns.push({\n        id: state.idColumn,\n        title: action.payload,\n        cards: [],\n      });\n    },\n    changeBoard: (state, action) => {\n      state.currentBoardId = action.payload;\n    },\n    deleteBoard: (state, action) => {\n      const element = state.list.find(\n        (element) => element.id === action.payload\n      );\n      state.list = state.list.filter((item) => item !== element);\n      state.currentBoardId = 0;\n    },\n    deleteColumn: (state, action) => {\n      const indexBoard = state.list.map((element) => element.currentBoardId).indexOf(state.currentBoardId);\n      const element = state.list[indexBoard].columns.find(\n        (element) => element.id === action.payload\n      );\n      state.list[indexBoard].columns = state.list[\n        state.currentBoardId\n      ].columns.filter((item) => item !== element);\n    },\n    addCard: (state, action) => {\n      state.idCard += 1;\n      const indexBoard = state.list.map((element) => element.currentBoardId).indexOf(state.currentBoardId);\n      const columns = state.list[indexBoard].columns;\n      const index = columns\n        .map((element) => element.id)\n        .indexOf(action.payload);\n      columns[index].cards.push({ id: state.idCard, title: \"Nueva card\" });\n    },\n    changeCardTitle: (state, action) => {\n      const indexBoard = state.list.map((element) => element.currentBoardId).indexOf(state.currentBoardId);\n      const column =\n        state.list[indexBoard].columns[action.payload.columnId];\n      const cardIndex = column.cards\n        .map((element) => element.id)\n        .indexOf(action.payload.cardId);\n      column.cards[cardIndex].title = action.payload.newTitle;\n    },\n    deleteCard: (state, action) => {\n      const indexBoard = state.list.map((element) => element.currentBoardId).indexOf(state.currentBoardId);\n      const element = state.list[indexBoard].columns.find((element) => element.id === action.payload.idColumn).cards.find((element) => element.id === action.payload.idCard);\n      state.list[indexBoard].columns.find((element) => element.id === action.payload.idColumn).cards =\n        state.list[indexBoard].columns.find((element) => element.id === action.payload.idColumn).cards.filter((item) => item !== element);\n    },\n    changeColumnTitle: (state, action) => {\n      const indexBoard = state.list.map((element) => element.currentBoardId).indexOf(state.currentBoardId);\n      const columns = state.list[indexBoard].columns;\n      const cardIndex = columns\n        .map((element) => element.id)\n        .indexOf(action.payload.id);\n      columns[cardIndex].title = action.payload.newTitle;\n    },\n    moveCard: (state, action) => {\n      const indexBoard = state.list.map((element) => element.currentBoardId).indexOf(state.currentBoardId);\n      const columns = state.list[indexBoard].columns;\n      const cardToMove = columns.find((element) => element.id === action.payload.idColumn).cards.find((element) => element.id === action.payload.idCard);\n      state.list[indexBoard].columns.find((element) => element.id === action.payload.idColumn).cards = columns.find((element) => element.id === action.payload.idColumn).cards.filter((element) => element.id !== cardToMove.id);\n      const arrayPosition = Math.floor((action.payload.y - 150) / (75)) + 1;\n      const index =\n        action.payload.y < 150\n          ? 0\n          : arrayPosition < columns.find((element) => element.id === action.payload.newIdColumn).cards.length\n          ? arrayPosition\n          : columns[action.payload.newIdColumn].cards.length;\n      columns[action.payload.newIdColumn].cards.splice(index,0,cardToMove);\n    }\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  addBoard,\n  addColumn,\n  changeBoard,\n  deleteBoard,\n  deleteColumn,\n  addCard,\n  changeCardTitle,\n  deleteCard,\n  changeColumnTitle,\n  moveCard,\n} = boardSlice.actions;\n\nexport default boardSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}