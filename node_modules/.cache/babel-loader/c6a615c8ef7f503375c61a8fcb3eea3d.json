{"ast":null,"code":"var _jsxFileName = \"/Users/karimevillanueva/Desktop/Practico/karimeTraining/src/components/Column.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addCard, changeColumnTitle, moveCard } from \"../reducers/boardSlice\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport Card from \"./Card\";\nimport \"./Column.css\";\nimport Types from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Column(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [, drag] = useDrag(() => ({\n    type: Types.columns,\n    item: {\n      id: props.column.id,\n      type: Types.columns\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  }));\n  const [, drop] = useDrop(() => ({\n    accept: Types.cards,\n    drop: (item, monitor) => {\n      item.type === Types.cards && moveCardFunc({\n        idCard: item.idCard,\n        idColumn: item.idColumn,\n        y: monitor.getClientOffset().y\n      });\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  }));\n\n  const moveCardFunc = _ref => {\n    let {\n      idCard,\n      idColumn,\n      y\n    } = _ref;\n    dispatch(moveCard({\n      idCard: idCard,\n      idColumn: idColumn,\n      newIdColumn: props.column.id,\n      y\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"component-column\",\n    ref: node => {\n      drag.current = node;\n      drop.current = node;\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"column-text\",\n        value: props.column.title,\n        onChange: event => dispatch(changeColumnTitle({\n          id: props.column.id,\n          newTitle: event.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"plus-button\",\n        onClick: () => {\n          dispatch(addCard(props.column.id));\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), props.column.cards.map(element => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        element: element,\n        column: props.column\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, element.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Column, \"/cZn4vz2wlpN06C4YRh4RP6IEDE=\", false, function () {\n  return [useDispatch, useDrag, useDrop];\n});\n\n_c = Column;\n\nvar _c;\n\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"names":["React","useDispatch","addCard","changeColumnTitle","moveCard","useDrag","useDrop","Card","Types","Column","props","dispatch","drag","type","columns","item","id","column","collect","monitor","isDragging","drop","accept","cards","moveCardFunc","idCard","idColumn","y","getClientOffset","isOver","newIdColumn","node","current","title","event","newTitle","target","value","map","element"],"sources":["/Users/karimevillanueva/Desktop/Practico/karimeTraining/src/components/Column.js"],"sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addCard, changeColumnTitle, moveCard } from \"../reducers/boardSlice\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport Card from \"./Card\";\nimport \"./Column.css\"\nimport Types from \"../utils\"\n\nexport default function Column (props) {\n  const dispatch = useDispatch();\n\n  const [, drag] = useDrag(() => ({\n    type: Types.columns,\n    item: { id: props.column.id, type: Types.columns },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  }));\n\n  const [, drop] = useDrop(() => ({\n    accept: Types.cards,\n    drop: (item, monitor) => {\n      item.type === Types.cards &&\n        moveCardFunc({ idCard: item.idCard, idColumn: item.idColumn, y:monitor.getClientOffset().y })\n    },\n    collect: (monitor) => ({\n      isOver: !!monitor.isOver(),\n    }),\n  }));\n\n  const moveCardFunc = ({ idCard, idColumn, y }) => {\n    dispatch(\n      moveCard({\n        idCard: idCard,\n        idColumn: idColumn,\n        newIdColumn: props.column.id,\n        y,\n      })\n    );\n  };\n\n  return (\n    <div\n      className=\"component-column\"\n      ref={node => \n        { \n            drag.current = node; \n            drop.current = node;\n        }}\n    >\n      <div className=\"text-row\">\n        <input\n          className=\"column-text\"\n          value={props.column.title}\n          onChange={(event) =>\n            dispatch(\n              changeColumnTitle({\n                id: props.column.id,\n                newTitle: event.target.value,\n              })\n            )\n          }\n        />\n        <button\n          className=\"plus-button\"\n          onClick={() => {\n            dispatch(addCard(props.column.id));\n          }}\n        >\n          +\n        </button>\n      </div>\n      {props.column.cards.map((element) => (\n        <div key={element.id}>\n          <Card element={element} column={props.column} />\n        </div>\n      ))}\n    </div>\n  );\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,EAAkBC,iBAAlB,EAAqCC,QAArC,QAAqD,wBAArD;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,WAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,cAAP;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,eAAe,SAASC,MAAT,CAAiBC,KAAjB,EAAwB;EAAA;;EACrC,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;EAEA,MAAM,GAAGW,IAAH,IAAWP,OAAO,CAAC,OAAO;IAC9BQ,IAAI,EAAEL,KAAK,CAACM,OADkB;IAE9BC,IAAI,EAAE;MAAEC,EAAE,EAAEN,KAAK,CAACO,MAAN,CAAaD,EAAnB;MAAuBH,IAAI,EAAEL,KAAK,CAACM;IAAnC,CAFwB;IAG9BI,OAAO,EAAGC,OAAD,KAAc;MACrBC,UAAU,EAAE,CAAC,CAACD,OAAO,CAACC,UAAR;IADO,CAAd;EAHqB,CAAP,CAAD,CAAxB;EAQA,MAAM,GAAGC,IAAH,IAAWf,OAAO,CAAC,OAAO;IAC9BgB,MAAM,EAAEd,KAAK,CAACe,KADgB;IAE9BF,IAAI,EAAE,CAACN,IAAD,EAAOI,OAAP,KAAmB;MACvBJ,IAAI,CAACF,IAAL,KAAcL,KAAK,CAACe,KAApB,IACEC,YAAY,CAAC;QAAEC,MAAM,EAAEV,IAAI,CAACU,MAAf;QAAuBC,QAAQ,EAAEX,IAAI,CAACW,QAAtC;QAAgDC,CAAC,EAACR,OAAO,CAACS,eAAR,GAA0BD;MAA5E,CAAD,CADd;IAED,CAL6B;IAM9BT,OAAO,EAAGC,OAAD,KAAc;MACrBU,MAAM,EAAE,CAAC,CAACV,OAAO,CAACU,MAAR;IADW,CAAd;EANqB,CAAP,CAAD,CAAxB;;EAWA,MAAML,YAAY,GAAG,QAA6B;IAAA,IAA5B;MAAEC,MAAF;MAAUC,QAAV;MAAoBC;IAApB,CAA4B;IAChDhB,QAAQ,CACNP,QAAQ,CAAC;MACPqB,MAAM,EAAEA,MADD;MAEPC,QAAQ,EAAEA,QAFH;MAGPI,WAAW,EAAEpB,KAAK,CAACO,MAAN,CAAaD,EAHnB;MAIPW;IAJO,CAAD,CADF,CAAR;EAQD,CATD;;EAWA,oBACE;IACE,SAAS,EAAC,kBADZ;IAEE,GAAG,EAAEI,IAAI,IACP;MACInB,IAAI,CAACoB,OAAL,GAAeD,IAAf;MACAV,IAAI,CAACW,OAAL,GAAeD,IAAf;IACH,CANL;IAAA,wBAQE;MAAK,SAAS,EAAC,UAAf;MAAA,wBACE;QACE,SAAS,EAAC,aADZ;QAEE,KAAK,EAAErB,KAAK,CAACO,MAAN,CAAagB,KAFtB;QAGE,QAAQ,EAAGC,KAAD,IACRvB,QAAQ,CACNR,iBAAiB,CAAC;UAChBa,EAAE,EAAEN,KAAK,CAACO,MAAN,CAAaD,EADD;UAEhBmB,QAAQ,EAAED,KAAK,CAACE,MAAN,CAAaC;QAFP,CAAD,CADX;MAJZ;QAAA;QAAA;QAAA;MAAA,QADF,eAaE;QACE,SAAS,EAAC,aADZ;QAEE,OAAO,EAAE,MAAM;UACb1B,QAAQ,CAACT,OAAO,CAACQ,KAAK,CAACO,MAAN,CAAaD,EAAd,CAAR,CAAR;QACD,CAJH;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAbF;IAAA;MAAA;MAAA;MAAA;IAAA,QARF,EA8BGN,KAAK,CAACO,MAAN,CAAaM,KAAb,CAAmBe,GAAnB,CAAwBC,OAAD,iBACtB;MAAA,uBACE,QAAC,IAAD;QAAM,OAAO,EAAEA,OAAf;QAAwB,MAAM,EAAE7B,KAAK,CAACO;MAAtC;QAAA;QAAA;QAAA;MAAA;IADF,GAAUsB,OAAO,CAACvB,EAAlB;MAAA;MAAA;MAAA;IAAA,QADD,CA9BH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsCD;;GAvEuBP,M;UACLR,W,EAEAI,O,EAQAC,O;;;KAXKG,M"},"metadata":{},"sourceType":"module"}