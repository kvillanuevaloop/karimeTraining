{"ast":null,"code":"var _jsxFileName = \"/Users/karimevillanueva/Desktop/Practico/karimeTraining/src/components/Column.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addCard, changeColumnTitle, moveCard } from \"../reducers/boardSlice\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport api from '../api';\nimport Card from \"./Card\";\nimport \"./Column.scss\";\nimport Types from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Column(props) {\n  _s();\n\n  const currentBoardId = useSelector(state => state.boards.currentBoardId);\n  const dispatch = useDispatch();\n  const [, drag] = useDrag(() => ({\n    type: Types.columns,\n    item: {\n      id: props.column.id,\n      type: Types.columns\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  }));\n  const [, drop] = useDrop(() => ({\n    accept: Types.cards,\n    drop: (item, monitor) => {\n      item.type === Types.cards && moveCardFunc({\n        idCard: item.idCard,\n        idColumn: item.idColumn,\n        y: monitor.getClientOffset().y\n      });\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  }));\n\n  const moveCardFunc = async _ref => {\n    let {\n      idCard,\n      idColumn,\n      y\n    } = _ref;\n    const newCard = await api.CARDS.get(currentBoardId, idColumn, idCard);\n    await api.CARDS.post(currentBoardId, props.column.id, newCard.title);\n    await api.CARDS.delete(currentBoardId, idColumn, idCard);\n    dispatch(moveCard({\n      idCard: idCard,\n      idColumn: idColumn,\n      newIdColumn: props.column.id,\n      y\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"component-column\",\n    ref: drag,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"component-drop\",\n      ref: drop,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"column-text\",\n          value: props.column.title,\n          onChange: event => {\n            api.COLUMNS.put(currentBoardId, props.column.id, event.target.value);\n            dispatch(changeColumnTitle({\n              id: props.column.id,\n              newTitle: event.target.value\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"plus-button\",\n          onClick: async () => {\n            const newCard = await api.CARDS.post(currentBoardId, props.column.id);\n            dispatch(addCard(newCard));\n          },\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), props.column.cards && props.column.cards.map(element => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          element: element,\n          column: props.column\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)\n      }, element.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Column, \"dqJIJP3o+gvbhAUiyzriEkQ9KGI=\", false, function () {\n  return [useSelector, useDispatch, useDrag, useDrop];\n});\n\n_c = Column;\n\nvar _c;\n\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"names":["React","useDispatch","useSelector","addCard","changeColumnTitle","moveCard","useDrag","useDrop","api","Card","Types","Column","props","currentBoardId","state","boards","dispatch","drag","type","columns","item","id","column","collect","monitor","isDragging","drop","accept","cards","moveCardFunc","idCard","idColumn","y","getClientOffset","isOver","newCard","CARDS","get","post","title","delete","newIdColumn","event","COLUMNS","put","target","value","newTitle","map","element"],"sources":["/Users/karimevillanueva/Desktop/Practico/karimeTraining/src/components/Column.js"],"sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addCard, changeColumnTitle, moveCard } from \"../reducers/boardSlice\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport api from '../api';\nimport Card from \"./Card\";\nimport \"./Column.scss\"\nimport Types from \"../utils\"\n\nexport default function Column (props) {\n  const currentBoardId = useSelector((state) => state.boards.currentBoardId);\n  const dispatch = useDispatch();\n\n\n  const [, drag] = useDrag(() => ({\n    type: Types.columns,\n    item: { id: props.column.id, type: Types.columns },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  }));\n\n  const [, drop] = useDrop(() => ({\n    accept: Types.cards,\n    drop: (item, monitor) => {\n      item.type === Types.cards &&\n        moveCardFunc({ idCard: item.idCard, idColumn: item.idColumn, y:monitor.getClientOffset().y })\n    },\n    collect: (monitor) => ({\n      isOver: !!monitor.isOver(),\n    }),\n  }));\n\n  const moveCardFunc = async ({ idCard, idColumn, y }) => {\n    const newCard = await api.CARDS.get(\n      currentBoardId,\n      idColumn,\n      idCard\n    );\n    await api.CARDS.post(currentBoardId, props.column.id, newCard.title);\n    await api.CARDS.delete(currentBoardId, idColumn, idCard);\n    dispatch(\n      moveCard({\n        idCard: idCard,\n        idColumn: idColumn,\n        newIdColumn: props.column.id,\n        y,\n      })\n    );\n  };\n\n  return (\n    <div className=\"component-column\" ref={drag}>\n      <div className=\"component-drop\" ref={drop}>\n        <div className=\"text-row\">\n          <input\n            className=\"column-text\"\n            value={props.column.title}\n            onChange={ (event) => {\n              api.COLUMNS.put(\n                currentBoardId,\n                props.column.id,\n                event.target.value\n              );\n              dispatch(\n                changeColumnTitle({\n                  id: props.column.id,\n                  newTitle: event.target.value,\n                })\n              );\n            }}\n            \n          />\n          <button\n            className=\"plus-button\"\n            onClick={async () => {\n              const newCard = await api.CARDS.post(\n                currentBoardId,\n                props.column.id\n              );\n              dispatch(addCard(newCard));\n            }}\n          >\n            +\n          </button>\n        </div>\n        {props.column.cards &&\n          props.column.cards.map((element) => (\n            <div key={element.id}>\n              <Card element={element} column={props.column} />\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,EAAkBC,iBAAlB,EAAqCC,QAArC,QAAqD,wBAArD;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,WAAjC;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,eAAe,SAASC,MAAT,CAAiBC,KAAjB,EAAwB;EAAA;;EACrC,MAAMC,cAAc,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaF,cAAzB,CAAlC;EACA,MAAMG,QAAQ,GAAGf,WAAW,EAA5B;EAGA,MAAM,GAAGgB,IAAH,IAAWX,OAAO,CAAC,OAAO;IAC9BY,IAAI,EAAER,KAAK,CAACS,OADkB;IAE9BC,IAAI,EAAE;MAAEC,EAAE,EAAET,KAAK,CAACU,MAAN,CAAaD,EAAnB;MAAuBH,IAAI,EAAER,KAAK,CAACS;IAAnC,CAFwB;IAG9BI,OAAO,EAAGC,OAAD,KAAc;MACrBC,UAAU,EAAE,CAAC,CAACD,OAAO,CAACC,UAAR;IADO,CAAd;EAHqB,CAAP,CAAD,CAAxB;EAQA,MAAM,GAAGC,IAAH,IAAWnB,OAAO,CAAC,OAAO;IAC9BoB,MAAM,EAAEjB,KAAK,CAACkB,KADgB;IAE9BF,IAAI,EAAE,CAACN,IAAD,EAAOI,OAAP,KAAmB;MACvBJ,IAAI,CAACF,IAAL,KAAcR,KAAK,CAACkB,KAApB,IACEC,YAAY,CAAC;QAAEC,MAAM,EAAEV,IAAI,CAACU,MAAf;QAAuBC,QAAQ,EAAEX,IAAI,CAACW,QAAtC;QAAgDC,CAAC,EAACR,OAAO,CAACS,eAAR,GAA0BD;MAA5E,CAAD,CADd;IAED,CAL6B;IAM9BT,OAAO,EAAGC,OAAD,KAAc;MACrBU,MAAM,EAAE,CAAC,CAACV,OAAO,CAACU,MAAR;IADW,CAAd;EANqB,CAAP,CAAD,CAAxB;;EAWA,MAAML,YAAY,GAAG,cAAmC;IAAA,IAA5B;MAAEC,MAAF;MAAUC,QAAV;MAAoBC;IAApB,CAA4B;IACtD,MAAMG,OAAO,GAAG,MAAM3B,GAAG,CAAC4B,KAAJ,CAAUC,GAAV,CACpBxB,cADoB,EAEpBkB,QAFoB,EAGpBD,MAHoB,CAAtB;IAKA,MAAMtB,GAAG,CAAC4B,KAAJ,CAAUE,IAAV,CAAezB,cAAf,EAA+BD,KAAK,CAACU,MAAN,CAAaD,EAA5C,EAAgDc,OAAO,CAACI,KAAxD,CAAN;IACA,MAAM/B,GAAG,CAAC4B,KAAJ,CAAUI,MAAV,CAAiB3B,cAAjB,EAAiCkB,QAAjC,EAA2CD,MAA3C,CAAN;IACAd,QAAQ,CACNX,QAAQ,CAAC;MACPyB,MAAM,EAAEA,MADD;MAEPC,QAAQ,EAAEA,QAFH;MAGPU,WAAW,EAAE7B,KAAK,CAACU,MAAN,CAAaD,EAHnB;MAIPW;IAJO,CAAD,CADF,CAAR;EAQD,CAhBD;;EAkBA,oBACE;IAAK,SAAS,EAAC,kBAAf;IAAkC,GAAG,EAAEf,IAAvC;IAAA,uBACE;MAAK,SAAS,EAAC,gBAAf;MAAgC,GAAG,EAAES,IAArC;MAAA,wBACE;QAAK,SAAS,EAAC,UAAf;QAAA,wBACE;UACE,SAAS,EAAC,aADZ;UAEE,KAAK,EAAEd,KAAK,CAACU,MAAN,CAAaiB,KAFtB;UAGE,QAAQ,EAAIG,KAAD,IAAW;YACpBlC,GAAG,CAACmC,OAAJ,CAAYC,GAAZ,CACE/B,cADF,EAEED,KAAK,CAACU,MAAN,CAAaD,EAFf,EAGEqB,KAAK,CAACG,MAAN,CAAaC,KAHf;YAKA9B,QAAQ,CACNZ,iBAAiB,CAAC;cAChBiB,EAAE,EAAET,KAAK,CAACU,MAAN,CAAaD,EADD;cAEhB0B,QAAQ,EAAEL,KAAK,CAACG,MAAN,CAAaC;YAFP,CAAD,CADX,CAAR;UAMD;QAfH;UAAA;UAAA;UAAA;QAAA,QADF,eAmBE;UACE,SAAS,EAAC,aADZ;UAEE,OAAO,EAAE,YAAY;YACnB,MAAMX,OAAO,GAAG,MAAM3B,GAAG,CAAC4B,KAAJ,CAAUE,IAAV,CACpBzB,cADoB,EAEpBD,KAAK,CAACU,MAAN,CAAaD,EAFO,CAAtB;YAIAL,QAAQ,CAACb,OAAO,CAACgC,OAAD,CAAR,CAAR;UACD,CARH;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAnBF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAiCGvB,KAAK,CAACU,MAAN,CAAaM,KAAb,IACChB,KAAK,CAACU,MAAN,CAAaM,KAAb,CAAmBoB,GAAnB,CAAwBC,OAAD,iBACrB;QAAA,uBACE,QAAC,IAAD;UAAM,OAAO,EAAEA,OAAf;UAAwB,MAAM,EAAErC,KAAK,CAACU;QAAtC;UAAA;UAAA;UAAA;QAAA;MADF,GAAU2B,OAAO,CAAC5B,EAAlB;QAAA;QAAA;QAAA;MAAA,QADF,CAlCJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA4CD;;GAtFuBV,M;UACCT,W,EACND,W,EAGAK,O,EAQAC,O;;;KAbKI,M"},"metadata":{},"sourceType":"module"}