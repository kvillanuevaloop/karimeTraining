{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteBoard, deleteColumn, deleteCard } from \"../reducers/boardSlice\";\nexport const Types = {\n  columns: 'COLUMNS',\n  board: 'BOARD',\n  cards: 'CARDS'\n};\nexport default Types;\nexport function chooseType(item) {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const deleteBoardFunc = id => {\n    dispatch(deleteBoard(id));\n  };\n\n  const deleteColumnFunc = id => {\n    dispatch(deleteColumn(id));\n  };\n\n  const deleteCardFunc = _ref => {\n    let {\n      idCard,\n      idColumn\n    } = _ref;\n    dispatch(deleteCard({\n      idCard: idCard,\n      idColumn: idColumn\n    }));\n  };\n\n  switch (item.type) {\n    case Types.board:\n      return deleteBoardFunc(item.id);\n\n    case Types.columns:\n      return deleteColumnFunc(item.id);\n\n    default:\n      return deleteCardFunc({\n        idCard: item.idCard,\n        idColumn: item.idColumn\n      });\n  }\n}\n\n_s(chooseType, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"names":["React","useDispatch","deleteBoard","deleteColumn","deleteCard","Types","columns","board","cards","chooseType","item","dispatch","deleteBoardFunc","id","deleteColumnFunc","deleteCardFunc","idCard","idColumn","type"],"sources":["/Users/karimevillanueva/Desktop/Practico/karimeTraining/src/utils/index.js"],"sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteBoard, deleteColumn, deleteCard } from \"../reducers/boardSlice\";\n\nexport const Types = {\n    columns : 'COLUMNS',\n    board: 'BOARD',\n    cards: 'CARDS',\n};\n\nexport default Types;\n\nexport function chooseType(item) {\n    const dispatch = useDispatch();\n\n    const deleteBoardFunc = (id) => {dispatch(deleteBoard(id))};\n    const deleteColumnFunc = (id) => {dispatch(deleteColumn(id))};\n    const deleteCardFunc = ({idCard,idColumn}) => {dispatch(deleteCard({idCard: idCard,idColumn: idColumn}))};\n\n    switch (item.type) {\n        case Types.board:\n            return deleteBoardFunc(item.id);\n        case Types.columns :\n            return deleteColumnFunc(item.id);\n        default:\n            return deleteCardFunc({idCard: item.idCard, idColumn: item.idColumn});\n    }\n}"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,UAApC,QAAsD,wBAAtD;AAEA,OAAO,MAAMC,KAAK,GAAG;EACjBC,OAAO,EAAG,SADO;EAEjBC,KAAK,EAAE,OAFU;EAGjBC,KAAK,EAAE;AAHU,CAAd;AAMP,eAAeH,KAAf;AAEA,OAAO,SAASI,UAAT,CAAoBC,IAApB,EAA0B;EAAA;;EAC7B,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;;EAEA,MAAMW,eAAe,GAAIC,EAAD,IAAQ;IAACF,QAAQ,CAACT,WAAW,CAACW,EAAD,CAAZ,CAAR;EAA0B,CAA3D;;EACA,MAAMC,gBAAgB,GAAID,EAAD,IAAQ;IAACF,QAAQ,CAACR,YAAY,CAACU,EAAD,CAAb,CAAR;EAA2B,CAA7D;;EACA,MAAME,cAAc,GAAG,QAAuB;IAAA,IAAtB;MAACC,MAAD;MAAQC;IAAR,CAAsB;IAACN,QAAQ,CAACP,UAAU,CAAC;MAACY,MAAM,EAAEA,MAAT;MAAgBC,QAAQ,EAAEA;IAA1B,CAAD,CAAX,CAAR;EAA0D,CAAzG;;EAEA,QAAQP,IAAI,CAACQ,IAAb;IACI,KAAKb,KAAK,CAACE,KAAX;MACI,OAAOK,eAAe,CAACF,IAAI,CAACG,EAAN,CAAtB;;IACJ,KAAKR,KAAK,CAACC,OAAX;MACI,OAAOQ,gBAAgB,CAACJ,IAAI,CAACG,EAAN,CAAvB;;IACJ;MACI,OAAOE,cAAc,CAAC;QAACC,MAAM,EAAEN,IAAI,CAACM,MAAd;QAAsBC,QAAQ,EAAEP,IAAI,CAACO;MAArC,CAAD,CAArB;EANR;AAQH;;GAfeR,U;UACKR,W"},"metadata":{},"sourceType":"module"}