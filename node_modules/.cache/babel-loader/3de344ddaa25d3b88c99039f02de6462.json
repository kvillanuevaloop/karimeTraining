{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n\nfunction indexBoard(state) {\n  return state.list.map(element => element.currentBoardId).indexOf(state.currentBoardId);\n}\n\n;\nexport const boardSlice = createSlice({\n  name: \"boards\",\n  initialState: {\n    list: [],\n    currentBoardId: 0,\n    idBoard: -1,\n    idColumn: -1,\n    idCard: -1\n  },\n  reducers: {\n    addBoard: (state, action) => {\n      state.idBoard += 1;\n      state.list.push({\n        id: state.idBoard,\n        title: action.payload,\n        columns: []\n      });\n    },\n    addColumn: (state, action) => {\n      state.idColumn += 1;\n      console.log(state.list[indexBoard(state)]);\n      console.log(state.list);\n      console.log(indexBoard(state));\n      state.list[indexBoard(state)].columns.push({\n        id: state.idColumn,\n        title: action.payload,\n        cards: []\n      });\n    },\n    changeBoard: (state, action) => {\n      state.currentBoardId = action.payload;\n    },\n    deleteBoard: (state, action) => {\n      const element = state.list.find(element => element.id === action.payload);\n      state.list = state.list.filter(item => item !== element);\n      state.currentBoardId = 0;\n    },\n    deleteColumn: (state, action) => {\n      const element = state.list[indexBoard(state)].columns.find(element => element.id === action.payload);\n      state.list[indexBoard(state)].columns = state.list[state.currentBoardId].columns.filter(item => item !== element);\n    },\n    addCard: (state, action) => {\n      state.idCard += 1;\n      const columns = state.list[indexBoard(state)].columns;\n      const index = columns.map(element => element.id).indexOf(action.payload);\n      columns[index].cards.push({\n        id: state.idCard,\n        title: \"Nueva card\"\n      });\n    },\n    changeCardTitle: (state, action) => {\n      const column = state.list[indexBoard(state)].columns[action.payload.columnId];\n      const cardIndex = column.cards.map(element => element.id).indexOf(action.payload.cardId);\n      column.cards[cardIndex].title = action.payload.newTitle;\n    },\n    deleteCard: (state, action) => {\n      const element = state.list[indexBoard(state)].columns.find(element => element.id === action.payload.idColumn).cards.find(element => element.id === action.payload.idCard);\n      state.list[indexBoard(state)].columns.find(element => element.id === action.payload.idColumn).cards = state.list[indexBoard(state)].columns.find(element => element.id === action.payload.idColumn).cards.filter(item => item !== element);\n    },\n    changeColumnTitle: (state, action) => {\n      const columns = state.list[indexBoard(state)].columns;\n      const cardIndex = columns.map(element => element.id).indexOf(action.payload.id);\n      columns[cardIndex].title = action.payload.newTitle;\n    },\n    moveCard: (state, action) => {\n      const columns = state.list[indexBoard(state)].columns;\n      const cardToMove = columns.find(element => element.id === action.payload.idColumn).cards.find(element => element.id === action.payload.idCard);\n      state.list[indexBoard(state)].columns.find(element => element.id === action.payload.idColumn).cards = columns.find(element => element.id === action.payload.idColumn).cards.filter(element => element.id !== cardToMove.id);\n      const arrayPosition = Math.floor((action.payload.y - 150) / 75) + 1;\n      const index = action.payload.y < 150 ? 0 : arrayPosition < columns.find(element => element.id === action.payload.newIdColumn).cards.length ? arrayPosition : columns.find(element => element.id === action.payload.newIdColumn).cards.length;\n      columns.find(element => element.id === action.payload.newIdColumn).cards.splice(index, 0, cardToMove);\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  addBoard,\n  addColumn,\n  changeBoard,\n  deleteBoard,\n  deleteColumn,\n  addCard,\n  changeCardTitle,\n  deleteCard,\n  changeColumnTitle,\n  moveCard\n} = boardSlice.actions;\nexport default boardSlice.reducer;","map":{"version":3,"names":["createSlice","indexBoard","state","list","map","element","currentBoardId","indexOf","boardSlice","name","initialState","idBoard","idColumn","idCard","reducers","addBoard","action","push","id","title","payload","columns","addColumn","console","log","cards","changeBoard","deleteBoard","find","filter","item","deleteColumn","addCard","index","changeCardTitle","column","columnId","cardIndex","cardId","newTitle","deleteCard","changeColumnTitle","moveCard","cardToMove","arrayPosition","Math","floor","y","newIdColumn","length","splice","actions","reducer"],"sources":["/Users/karimevillanueva/Desktop/Practico/karimeTraining/src/reducers/boardSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nfunction indexBoard (state) { return state.list.map((element) => element.currentBoardId).indexOf(state.currentBoardId)};\n\nexport const boardSlice = createSlice({\n  name: \"boards\",\n  initialState: {\n    list: [],\n    currentBoardId: 0,\n    idBoard: -1,\n    idColumn: -1,\n    idCard: -1,\n  },\n  reducers: {\n    addBoard: (state, action) => {\n      state.idBoard += 1;\n      state.list.push({\n        id: state.idBoard,\n        title: action.payload,\n        columns: [],\n      });\n    },\n    addColumn: (state, action) => {\n      state.idColumn += 1;\n      console.log(state.list[indexBoard(state)])\n      console.log(state.list)\n      console.log(indexBoard(state))\n      state.list[indexBoard(state)].columns.push({\n        id: state.idColumn,\n        title: action.payload,\n        cards: [],\n      });\n    },\n    changeBoard: (state, action) => {\n      state.currentBoardId = action.payload;\n    },\n    deleteBoard: (state, action) => {\n      const element = state.list.find(\n        (element) => element.id === action.payload\n      );\n      state.list = state.list.filter((item) => item !== element);\n      state.currentBoardId = 0;\n    },\n    deleteColumn: (state, action) => {\n      const element = state.list[indexBoard(state)].columns.find(\n        (element) => element.id === action.payload\n      );\n      state.list[indexBoard(state)].columns = state.list[\n        state.currentBoardId\n      ].columns.filter((item) => item !== element);\n    },\n    addCard: (state, action) => {\n      state.idCard += 1;\n      const columns = state.list[indexBoard(state)].columns;\n      const index = columns\n        .map((element) => element.id)\n        .indexOf(action.payload);\n      columns[index].cards.push({ id: state.idCard, title: \"Nueva card\" });\n    },\n    changeCardTitle: (state, action) => {\n      const column =\n        state.list[indexBoard(state)].columns[action.payload.columnId];\n      const cardIndex = column.cards\n        .map((element) => element.id)\n        .indexOf(action.payload.cardId);\n      column.cards[cardIndex].title = action.payload.newTitle;\n    },\n    deleteCard: (state, action) => {\n      const element = state.list[indexBoard(state)].columns.find((element) => element.id === action.payload.idColumn).cards.find((element) => element.id === action.payload.idCard);\n      state.list[indexBoard(state)].columns.find((element) => element.id === action.payload.idColumn).cards =\n        state.list[indexBoard(state)].columns.find((element) => element.id === action.payload.idColumn).cards.filter((item) => item !== element);\n    },\n    changeColumnTitle: (state, action) => {\n      const columns = state.list[indexBoard(state)].columns;\n      const cardIndex = columns\n        .map((element) => element.id)\n        .indexOf(action.payload.id);\n      columns[cardIndex].title = action.payload.newTitle;\n    },\n    moveCard: (state, action) => {\n      const columns = state.list[indexBoard(state)].columns;\n      const cardToMove = columns.find((element) => element.id === action.payload.idColumn).cards.find((element) => element.id === action.payload.idCard);\n      state.list[indexBoard(state)].columns.find((element) => element.id === action.payload.idColumn).cards = columns.find((element) => element.id === action.payload.idColumn).cards.filter((element) => element.id !== cardToMove.id);\n      const arrayPosition = Math.floor((action.payload.y - 150) / (75)) + 1;\n      const index =\n        action.payload.y < 150\n          ? 0\n          : arrayPosition < columns.find((element) => element.id === action.payload.newIdColumn).cards.length\n          ? arrayPosition\n          : columns.find((element) => element.id === action.payload.newIdColumn).cards.length;\n      columns.find((element) => element.id === action.payload.newIdColumn).cards.splice(index,0,cardToMove);\n    }\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  addBoard,\n  addColumn,\n  changeBoard,\n  deleteBoard,\n  deleteColumn,\n  addCard,\n  changeCardTitle,\n  deleteCard,\n  changeColumnTitle,\n  moveCard,\n} = boardSlice.actions;\n\nexport default boardSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}