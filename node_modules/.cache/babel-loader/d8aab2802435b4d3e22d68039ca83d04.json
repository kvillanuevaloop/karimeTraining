{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { act } from 'react-dom/test-utils';\nexport const boardSlice = createSlice({\n  name: 'boards',\n  initialState: {\n    list: [],\n    currentBoard: 0,\n    id: -1\n  },\n  reducers: {\n    addBoard: (state, action) => {\n      state.id += 1;\n      state.list.push({\n        id: state.id,\n        title: action.payload,\n        columns: []\n      });\n    },\n    addColumn: (state, action) => {\n      state.list[state.currentBoard].columns = [...state.list[state.currentBoard].columns, {\n        id: state.list[state.currentBoard].columns.length,\n        title: action.payload\n      }];\n    },\n    changeBoard: (state, action) => {\n      state.currentBoard = action.payload;\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  addBoard,\n  addColumn,\n  changeBoard\n} = boardSlice.actions;\nexport default boardSlice.reducer;","map":{"version":3,"names":["createSlice","act","boardSlice","name","initialState","list","currentBoard","id","reducers","addBoard","state","action","push","title","payload","columns","addColumn","length","changeBoard","actions","reducer"],"sources":["/Users/karimevillanueva/Desktop/Practico/trello/src/reducers/boardSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport { act } from 'react-dom/test-utils';\n\nexport const boardSlice = createSlice({\n  name: 'boards',\n  initialState: {\n    list: [],\n    currentBoard: 0,\n    id: -1,\n  },\n  reducers: {\n    addBoard: (state, action) => {\n      state.id += 1;\n      state.list.push({ id: state.id ,title: action.payload, columns: [] });\n    },\n    addColumn: (state, action) => {\n      state.list[state.currentBoard].columns = [...state.list[state.currentBoard].columns, {id: state.list[state.currentBoard].columns.length, title: action.payload}]\n    },\n    changeBoard: (state, action) => {\n      state.currentBoard = action.payload;\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { addBoard, addColumn, changeBoard } = boardSlice.actions\n\nexport default boardSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,GAAT,QAAoB,sBAApB;AAEA,OAAO,MAAMC,UAAU,GAAGF,WAAW,CAAC;EACpCG,IAAI,EAAE,QAD8B;EAEpCC,YAAY,EAAE;IACZC,IAAI,EAAE,EADM;IAEZC,YAAY,EAAE,CAFF;IAGZC,EAAE,EAAE,CAAC;EAHO,CAFsB;EAOpCC,QAAQ,EAAE;IACRC,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC3BD,KAAK,CAACH,EAAN,IAAY,CAAZ;MACAG,KAAK,CAACL,IAAN,CAAWO,IAAX,CAAgB;QAAEL,EAAE,EAAEG,KAAK,CAACH,EAAZ;QAAgBM,KAAK,EAAEF,MAAM,CAACG,OAA9B;QAAuCC,OAAO,EAAE;MAAhD,CAAhB;IACD,CAJO;IAKRC,SAAS,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;MAC5BD,KAAK,CAACL,IAAN,CAAWK,KAAK,CAACJ,YAAjB,EAA+BS,OAA/B,GAAyC,CAAC,GAAGL,KAAK,CAACL,IAAN,CAAWK,KAAK,CAACJ,YAAjB,EAA+BS,OAAnC,EAA4C;QAACR,EAAE,EAAEG,KAAK,CAACL,IAAN,CAAWK,KAAK,CAACJ,YAAjB,EAA+BS,OAA/B,CAAuCE,MAA5C;QAAoDJ,KAAK,EAAEF,MAAM,CAACG;MAAlE,CAA5C,CAAzC;IACD,CAPO;IAQRI,WAAW,EAAE,CAACR,KAAD,EAAQC,MAAR,KAAmB;MAC9BD,KAAK,CAACJ,YAAN,GAAqBK,MAAM,CAACG,OAA5B;IACD;EAVO;AAP0B,CAAD,CAA9B,C,CAqBP;;AACA,OAAO,MAAM;EAAEL,QAAF;EAAYO,SAAZ;EAAuBE;AAAvB,IAAuChB,UAAU,CAACiB,OAAxD;AAEP,eAAejB,UAAU,CAACkB,OAA1B"},"metadata":{},"sourceType":"module"}