{"ast":null,"code":"var _jsxFileName = \"/Users/karimevillanueva/Desktop/Practico/karimeTraining/src/components/Column.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addCard, changeColumnTitle, moveCard } from \"../reducers/boardSlice\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport Card from \"./Card\";\nimport \"./Column.css\";\nimport Types from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Column(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [, drag] = useDrag(() => ({\n    type: Types.columns,\n    item: {\n      id: props.column.id,\n      type: Types.columns\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  }));\n  const [, drop] = useDrop(() => ({\n    accept: Types.cards,\n    drop: (item, monitor) => {\n      item.type === Types.cards && moveCardFunc({\n        idCard: item.idCard,\n        idColumn: item.idColumn,\n        y: monitor.getClientOffset().y\n      });\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  }));\n  const ref1 = useRef(drag);\n\n  const moveCardFunc = _ref => {\n    let {\n      idCard,\n      idColumn,\n      y\n    } = _ref;\n    dispatch(moveCard({\n      idCard: idCard,\n      idColumn: idColumn,\n      newIdColumn: props.column.id,\n      y\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"component-column\",\n    ref: drag,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"component-drop\",\n      ref: drop,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"column-text\",\n          value: props.column.title,\n          onChange: event => dispatch(changeColumnTitle({\n            id: props.column.id,\n            newTitle: event.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"plus-button\",\n          onClick: () => {\n            dispatch(addCard(props.column.id));\n          },\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), props.column.cards.map(element => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          element: element,\n          column: props.column\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, element.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Column, \"1bRY8FxxeDZdSjQC8frIU0HjDl0=\", false, function () {\n  return [useDispatch, useDrag, useDrop];\n});\n\n_c = Column;\n\nvar _c;\n\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"names":["React","useRef","useDispatch","addCard","changeColumnTitle","moveCard","useDrag","useDrop","Card","Types","Column","props","dispatch","drag","type","columns","item","id","column","collect","monitor","isDragging","drop","accept","cards","moveCardFunc","idCard","idColumn","y","getClientOffset","isOver","ref1","newIdColumn","title","event","newTitle","target","value","map","element"],"sources":["/Users/karimevillanueva/Desktop/Practico/karimeTraining/src/components/Column.js"],"sourcesContent":["import React, { useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addCard, changeColumnTitle, moveCard } from \"../reducers/boardSlice\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport Card from \"./Card\";\nimport \"./Column.css\"\nimport Types from \"../utils\"\n\nexport default function Column (props) {\n  const dispatch = useDispatch();\n\n  const [, drag] = useDrag(() => ({\n    type: Types.columns,\n    item: { id: props.column.id, type: Types.columns },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  }));\n\n  const [, drop] = useDrop(() => ({\n    accept: Types.cards,\n    drop: (item, monitor) => {\n      item.type === Types.cards &&\n        moveCardFunc({ idCard: item.idCard, idColumn: item.idColumn, y:monitor.getClientOffset().y })\n    },\n    collect: (monitor) => ({\n      isOver: !!monitor.isOver(),\n    }),\n  }));\n\n  const ref1 =  useRef(drag);\n\n  const moveCardFunc = ({ idCard, idColumn, y }) => {\n    dispatch(\n      moveCard({\n        idCard: idCard,\n        idColumn: idColumn,\n        newIdColumn: props.column.id,\n        y,\n      })\n    );\n  };\n\n  return (\n    <div className=\"component-column\" ref={drag}>\n      <div className=\"component-drop\" ref={drop}>\n        <div className=\"text-row\">\n          <input\n            className=\"column-text\"\n            value={props.column.title}\n            onChange={(event) =>\n              dispatch(\n                changeColumnTitle({\n                  id: props.column.id,\n                  newTitle: event.target.value,\n                })\n              )\n            }\n          />\n          <button\n            className=\"plus-button\"\n            onClick={() => {\n              dispatch(addCard(props.column.id));\n            }}\n          >\n            +\n          </button>\n        </div>\n        {props.column.cards.map((element) => (\n          <div key={element.id}>\n            <Card element={element} column={props.column} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}